Given a string S(input consisting) of ‘’ and ‘#’. The length of the string is variable. The task is to find the minimum number of ‘’ or ‘#’ to make it a valid string. The string is considered valid if the number of ‘’ and ‘#’ are equal. The ‘’ and ‘#’ can be at any position in the string.

Input Format

Read a string

Constraints

string

Output Format

(>#): positive integer (#>): negative integer (#=*): 0

Sample Input 0

###***
Sample Output 0

0
Sample Input 1

**###*##*###
Sample Output 1

-4
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char s[20];
    scanf("%s",&s);
    int i,c=0,a=0;
    for(i=0;s[i]!='\0';i++)
    {
        if(s[i]=='*')
        {
            c=c+1;
        }
        if(s[i]=='#')
        {
            a=a+1;
        }
    }printf("%d",c-a);

    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    
    return 0;
}
